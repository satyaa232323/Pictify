// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  clerkId String @unique
  email String @unique
  name String @unique
  image String?
  pins Pin[] @relation("UserPins")
  boards Board[]
  saves Save[]
  createdAt DateTime @default(now())
}


model Pin {
  id String @id @default(cuid())
  title String
  imageUrl String
  description String?
  userId String
  user  User @relation("UserPins", fields: [userId], references: [id])
  saves Save[] @relation("SavedPins")
  boards BoardPin[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Save {
  id String @id @default(cuid())
  user User @relation(fields: [userId], references: [id])
  userId String
  pin Pin @relation("SavedPins", fields: [pinId], references: [id], onDelete: Cascade)
  pinId String
  savedAt DateTime @default(now())

  @@unique([userId, pinId]) 
}

model Board {
  id String @id @default(cuid())
  name String
  userId String
  user User @relation(fields: [userId], references: [id])
  pins BoardPin[]
  
}

model BoardPin {
  id String @id @default(cuid())
  boardId String
  pinId String
  board Board @relation(fields: [boardId], references: [id])
  pin Pin @relation(fields: [pinId], references: [id], onDelete: Cascade)

  @@unique([boardId, pinId])
}